/*

888   _              88~\   88~\ ,e,
888 e~ ~   e88~-_  _888__ _888__  "   e88~~8e
888d8b    d888   i  888    888   888 d888  88b
888Y88b   8888   |  888    888   888 8888__888
888 Y88b  Y888   '  888    888   888 Y888    ,
888  Y88b  "88_-~   888    888   888  "88___/

		     - 1.0
             - Guilherme Haschel
*/

@require "configs"

/*
* @name text-border
* @description Creates a four colored border in the desired element's text.
* @alias tb()
* @author
* @ref
* @input text-border(red, 1px, yellow, 1px, green, 1px, purple, 1px)
* @type function
* @markup
*/
text-border($color1 = red, $size1 = 1px, $color2 = yellow, $size2 = 1px, $color3 = green, $size3 = 1px, $color4 = purple, $size4 = 1px)
	$size1-1 = unit($size1, px)
	$size2-1 = unquote('-' + unit($size2, px))
	$size3-1 = unit($size3, px)
	$size3-2 = unquote('-' + unit($size3, px))
	$size4-1 = unquote('-' + unit($size4, px))
	$size4-2 = unit($size4, px)
	text-shadow  $size1-1 $size1-1 $color1, $size2-1 $size2-1 $color2, $size3-1 $size3-2 $color3, $size4-1 $size4-2 $color4
tb = text-border

/*
* @name error-input($color)
* @description Changes the placeholder, border and outline colors.
* @alias error(), err()
* @author
* @ref
* @input error-input(red)
* @type function
* @markup
input {
  border: 1px solid red !important;
  color: red;
  outline-color: red;
}
input::-webkit-input-placeholder {
  color: red;
}
input::-moz-placeholder {
  color: red;
}
input:-moz-placeholder {
  color: red;
}
input:-ms-input-placeholder {
  color: red;
}
input::placeholder {
  color: red;
}
input:focus {
  outline-color: red;
}
*/
error-input($color = #e36d56)
	border 1px solid $color !important
	color $color
	outline-color $color
	&::-webkit-input-placeholder
		color $color
	&::-moz-placeholder
		color $color
	&:-moz-placeholder
		color $color
	&:-ms-input-placeholder
		color $color
	&::placeholder
		color $color
	&:focus
		outline-color $color
error = error-input
err = error-input

/*
* @name placeholder($color)
* @description Changes the placeholder color.
* @alias ph()
* @author
* @ref
* @input placeholder(#eee)
* @type function
* @markup
input::-webkit-input-placeholder {
  color: red;
}
input::-moz-placeholder {
  color: red;
}
input:-moz-placeholder {
  color: red;
}
input:-ms-input-placeholder {
  color: red;
}
input::placeholder {
  color: red;
}
input:focus {
  outline-color: red;
}
*/
placeholder($color = #eeeeee)
	&::-webkit-input-placeholder
		color $color
	&::-moz-placeholder
		color $color
	&:-moz-placeholder
		color $color
	&:-ms-input-placeholder
		color $color
	&::placeholder
		color $color
ph = placeholder

/*
* @name fix-input()
* @description Removes the placeholder while the input is focused and empty. Also removes the 'invalid' input state red box shadow from Firefox.
* @alias
* @author
* @ref
* @input fix-input()
* @type function
* @markup
input:focus::-webkit-input-placeholder {
  color: transparent;
}
input:invalid {
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
}
*/
fix-input()
	&:focus
		&::-webkit-input-placeholder
			color transparent
	&:invalid
		-webkit-box-shadow none
		-moz-box-shadow none
		box-shadow none

/*
* @name $antialiasing
* @description Enables font antialiasing.
* @alias $anti-aliasing, $font-smoothing
* @author Maximilian Hoffmann & drinchev
* @ref http://stackoverflow.com/questions/11459746/css3-webfont-smoothing-and-antialiasing-in-firefox-and-opera, http://drinchev.github.io/monosocialiconsfont/
* @input $antialiasing
* @type placeholder
* @markup
-webkit-text-rendering: optimizeLegibility;
-moz-text-rendering: optimizeLegibility;
-ms-text-rendering: optimizeLegibility;
-o-text-rendering: optimizeLegibility;
text-rendering: optimizeLegibility;
-webkit-font-smoothing: antialiased;
-moz-osx-font-smoothing: grayscale;
-moz-font-smoothing: antialiased;
-ms-font-smoothing: antialiased;
-o-font-smoothing: antialiased;
font-smoothing: antialiased;
*/
$antialiasing,
$anti-aliasing,
$font-smoothing
	-webkit-text-rendering optimizeLegibility
	-moz-text-rendering optimizeLegibility
	-ms-text-rendering optimizeLegibility
	-o-text-rendering optimizeLegibility
	text-rendering optimizeLegibility
	-webkit-font-smoothing antialiased
	-moz-osx-font-smoothing grayscale
	-moz-font-smoothing antialiased
	-ms-font-smoothing antialiased
	-o-font-smoothing antialiased
	font-smoothing antialiased

/*
* @name scroll-bar($size, $background1, $background2, $radius)
* @description Changes the scrollbar's default style (Not for Firefox).
* @alias
* @author Drew Noakes
* @ref http://stackoverflow.com/questions/7725652/css-scrollbar-style-cross-browser
* @input scroll-bar(6px, transparent, #ccc, 5px)
* @type function
* @markup
html {
  scrollbar-3dlight-color: transparent;
  scrollbar-arrow-color: #666;
  scrollbar-darkshadow-color: transparent;
  scrollbar-face-color: #ccc;
  scrollbar-base-color: transparent;
  scrollbar-highlight-color: transparent;
  scrollbar-shadow-color: transparent;
  scrollbar-track-color: transparent;
}
html::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}
html::-webkit-scrollbar-track {
  background: transparent;
}
html::-webkit-scrollbar-thumb {
  background: #ccc;;
  -webkit-border-radius: 5px;
  border-radius: 5px;
}
*/
scroll-bar($size = 6px, $background1 = transparent, $background2 = #ccc, $radius = 5px)
	scrollbar-3dlight-color $background1
	scrollbar-arrow-color darken($background2, 50%)
	scrollbar-darkshadow-color $background1
	scrollbar-face-color $background2
	scrollbar-base-color $background1
	scrollbar-highlight-color $background1
	scrollbar-shadow-color $background1
	scrollbar-track-color $background1
	&::-webkit-scrollbar
		width $size
		height $size
	&::-webkit-scrollbar-track
		background $background1
	&::-webkit-scrollbar-thumb
		background $background2
		-webkit-border-radius $radius
		border-radius $radius

/*
* @name disable-scroll-styling()
* @description Disable scrollbar styling by not vendor-prefixed properties.
* @alias
* @author W3C
* @ref https://www.w3.org/Style/Examples/007/scrollbars.en.html
* @input disable-scroll-styling()
* @type function
* @markup
scrollbar-face-color: ThreeDFace !important;
scrollbar-shadow-color: ThreeDDarkShadow !important;
scrollbar-highlight-color: ThreeDHighlight !important;
scrollbar-3dlight-color: ThreeDLightShadow !important;
scrollbar-darkshadow-color: ThreeDDarkShadow !important;
scrollbar-track-color: Scrollbar !important;
scrollbar-arrow-color: ButtonText !important;
*/
disable-scroll-styling()
	scrollbar-face-color ThreeDFace !important
	scrollbar-shadow-color ThreeDDarkShadow !important
	scrollbar-highlight-color ThreeDHighlight !important
	scrollbar-3dlight-color ThreeDLightShadow !important
	scrollbar-darkshadow-color ThreeDDarkShadow !important
	scrollbar-track-color Scrollbar !important
	scrollbar-arrow-color ButtonText !important

/*
* @name border-radius($radius)
* @description Cross-browser border-radius.
* @alias bradius()
* @author
* @ref http://css3pie.com
* @input border-radius(5px)
* @type function
* @markup
-webkit-border-radius: 5px;
-khtml-border-radius: 5px;
-moz-border-radius: 5px;
border-radius: 5px;
behavior: url('https://cdn.rawgit.com/ghaschel/koffie/master/htc/PIE.htc');
-ms-behaviour: url('https://cdn.rawgit.com/ghaschel/koffie/master/htc/PIE.htc');
*/
border-radius($radius = 5px)
	-webkit-border-radius $radius
	-khtml-border-radius $radius
	-moz-border-radius $radius
	border-radius $radius
	if $ie6 || $ie7 || $ie8
		behavior url($absPath + 'PIE.htc')
		-ms-behavior url($absPath + 'PIE.htc')
bradius = border-radius

/*
* @name padding-x($value)
* @description Wrapper function for easier use of padding-left and padding-right.
* @alias paddingx()
* @author
* @ref
* @input padding-x(3px)
* @type function
* @markup
padding-left: 3px;
padding-right: 3px;
*/
padding-x($value = 0px)
	padding-left $value
	padding-right $value
paddingx = padding-x

/*
* @name padding-y($value)
* @description Wrapper function for easier use of padding-top and padding-bottom.
* @alias paddingy()
* @author
* @ref
* @input padding-y(6px)
* @type function
* @markup
padding-top: 6px;
padding-bottom: 6px;
*/
padding-y($value = 0px)
	padding-top $value
	padding-bottom $value
paddingy = padding-y

/*
* @name margin-y($value)
* @description Wrapper function for easier use of margin-top and margin-bottom.
* @alias marginy()
* @author
* @ref
* @input margin-y(9px)
* @type function
* @markup
margin-top: 9px;
margin-bottom: 9px;
*/
margin-y($value = 0px)
	margin-top $value
	margin-bottom $value
marginy = margin-y

/*
* @name margin-x($value)
* @description Wrapper function for easier use of margin-left and margin-right.
* @alias marginx()
* @author
* @ref
* @input margin-x(6px)
* @type function
* @markup
margin-left: 6px;
margin-right: 6px;
*/
margin-x($value = 0px)
	margin-left $value
	margin-right $value
marginx  = margin-x

/*
* @name opacity($opacity)
* @description Cross-browser opacity function.
* @alias opc()
* @author
* @ref
* @input opacity(0.35)
* @type function
* @markup
-webkit-opacity: 0.35;
-khtml-opacity: 0.35;
-moz-opacity: 0.35;
opacity: 0.35;
-ms-filter: progrid:DXImageTransform.Microsoft.Alpha(opacity=35);
filter: alpha(opacity=35);
*/
opacity($opacity = 0.5)
	-webkit-opacity $opacity
	-khtml-opacity $opacity
	-moz-opacity $opacity
	opacity $opacity
	if $ie8
		-ms-filter unquote('progid:DXImageTransform.Microsoft.Alpha(opacity=' + round($opacity * 100) + ')')
	if $ie5 || $ie6 || $ie7
		filter unquote('alpha(opacity=' + round($opacity * 100) + ')')
opc = opacity

/*
* @name nout()
* @description Removes the outline when focus state is active.
* @alias
* @author
* @ref
* @input nout()
* @type function
* @markup
a {
  outline: none;
}
a:focus {
  outline: none;
}
*/
nout()
	outline none
	&:focus
		outline none

/*
* @name top-triangle($size, $color)
* @description Displays a triangle at the element's top.
* @alias
* @author
* @ref
* @input span:after { top-triangle(15px, $fff) }
* @type function
* @markup
span:after {
  content: '';
  display: inline-block;
  height: 1px;
  width: 1px;
  position: absolute;
  top: 29px;
  border-left: 15px solid transparent;
  border-top: 15px solid transparent;
  border-bottom: 15px solid #fff;
  border-right: 15px solid transparent;
}
*/
top-triangle($size = 15px, $color = #fff)
	content ''
	display inline-block
	height 1px
	width 1px
	position absolute
	top round(($size * 2) - 1)
	border-left $size solid transparent
	border-top $size solid transparent
	border-bottom $size solid $color
	border-right $size solid transparent

/*
* @name bottom-triangle($size, $color)
* @description Displays a triangle in the element's bottom.
* @alias
* @author
* @ref
* @input span:after { bottom-triangle(15px, $fff) }
* @type function
* @markup
span:after {
  content: '';
  display: inline-block;
  height: 1px;
  width: 1px;
  position: absolute;
  bottom: 29px;
  border-left: 15px solid transparent;
  border-top: 15px solid #fff;
  border-bottom: 15px solid transparent;
  border-right: 15px solid transparent;
}
*/
bottom-triangle($size = 15px, $color = #fff)
	content ''
	display inline-block
	height 1px
	width 1px
	position absolute
	bottom round(($size * 2) - 1)
	border-left $size solid transparent
	border-top $size solid $color
	border-bottom $size solid transparent
	border-right $size solid transparent

/*
* @name left-triangle($size, $color)
* @description Displays a triangle in the element's left.
* @alias
* @author
* @ref
* @input span:after { left-triangle(15px, $fff) }
* @type function
* @markup
span:after {
  content: '';
  display: inline-block;
  height: 1px;
  width: 1px;
  position: absolute;
  left: 29px;
  border-left: 15px solid transparent;
  border-top: 15px solid transparent
  border-bottom: 15px solid transparent;
  border-right: 15px solid #fff;
}

*/
left-triangle($size = 15px, $color = #fff)
	content ''
	display inline-block
	height 1px
	width 1px
	position absolute
	left round(($size * 2) - 1)
	border-left $size solid transparent
	border-top $size solid transparent
	border-bottom $size solid transparent
	border-right $size solid $color

/*
* @name right-triangle($size, $color)
* @description Displays a triangle in the element's right.
* @alias
* @author
* @ref
* @input span:after { right-triangle(15px, $fff) }
* @type function
* @markup
span:after {
  content: '';
  display: inline-block;
  height: 1px;
  width: 1px;
  position: absolute;
  right: 29px;
  border-left: 15px solid #fff;
  border-top: 15px solid transparent;
  border-bottom: 15px solid transparent;
  border-right: 15px solid transparent;
}
*/
right-triangle($size = 15px, $color = #fff)
	content ''
	display inline-block
	height 1px
	width 1px
	position absolute
	right round(($size * 2) - 1)
	border-left $size solid $color
	border-top $size solid transparent
	border-bottom $size solid transparent
	border-right $size solid transparent

/*
* @name $text-overflow
* @description Displays reticences at the line's end in case it doesn't fit.
* @alias $txt-ovf, $txtovf
* @author
* @ref
* @input $text-overflow
* @type placeholder
* @markup
overflow: hidden
white-space: nowrap
text-overflow: ellipsis
max-widt: 100%
display: inline-block
*/
$text-overflow,
$txt-ovf,
$txtovf
	overflow hidden
	white-space nowrap
	text-overflow ellipsis
	max-width 100%
	display inline-block

/*
* @name $no-user-select
* @description Disable user content selection.
* @alias $nousel
* @author
* @ref
* @input $no-user-select
* @type placeholder
* @markup
-webkit-user-select: none;
-khtml-user-select: none;
-moz-user-select: none;
-ms-user-select: none;
-o-user-select: none;
user-select: none;
*/
$no-user-select,
$nousel
	-webkit-user-select none
	-khtml-user-select none
	-moz-user-select none
	-ms-user-select none
	-o-user-select none
	user-select none

/*
* @name user-select($color-1, $color-2)
* @description Changes the user content selection color.
* @alias usel()
* @author
* @ref
* @input user-select(yellow, red)
* @type function
* @markup
p::selection {
  color: red;
  background: yellow;
}
p::-moz-selection {
  color: yellow;
  background: red;
}
*/
user-select($color-1 = yellow, $color-2 = red)
	&::selection
		color $color-2
		background $color-1
	&::-moz-selection
		color $color-2
		background $color-1
usel = user-select

/*
* @name $fix-flickering
* @description Fixes the flickering on pseudo elements when animated by transition.
* @alias $fixfl
* @author
* @ref
* @input $fix-flickering
* @type placeholder
* @markup
-webkit-backface-visibility: hidden;
-ms-backface-visibility: hidden;
backface-visibility: hidden;
*/
$fix-flickering,
$fixfl
	-webkit-backface-visibility hidden
	-ms-backface-visibility hidden
	backface-visibility hidden

/*
* @name animated($time, $ease, $where)
* @description Function for faster transition creation.
* @alias transition(), trans()
* @author
* @ref
* @input animated(0.3s, ease-in-out, all)
* @type function
* @markup
-webkit-transition: 0.3s ease-in-out all;
-khtml-transition: 0.3s ease-in-out all;
-moz-transition: 0.3s ease-in-out all;
-ms-transition: 0.3s ease-in-out all;
-o-transition: 0.3s ease-in-out all;
transition: 0.3s ease-in-out all;
*/
animated($time = 0.3s, $ease = ease-in-out, $where = all)
	-webkit-transition $time $ease $where
	-khtml-transition $time $ease $where
	-moz-transition $time $ease $where
	-ms-transition $time $ease $where
	-o-transition $time $ease $where
	transition $time $ease $where
transition = animated
trans = animated

/*
* @name $nospeak
* @description Hides an element from screen readers.
* @alias $no-speak
* @author
* @ref
* @input $nospeak
* @type placeholder
* @markup
speak: none;
*/
$nospeak,
$no-speak
	speak none

/*
* @name $hw-accelerated
* @description Enables hardware acceleration. Use at the desided element's parent.
* @alias $hwacc
* @author
* @ref
* @input $hw-accelerated
* @type placeholder
* @markup
-webkit-transform: rotateZ(360deg);
-webkit-backface-visibility: hidden;
-webkit-perspective: 1000;
-webkit-backface-visibility: hidden;
backface-visibility: hidden;
-webkit-perspective: 1000;
perspective: 1000;
*/
$hw-accelerated,
$hwacc
	-webkit-transform rotateZ(360deg)
	-webkit-backface-visibility hidden
 	-webkit-perspective 1000
 	-webkit-backface-visibility hidden
 	backface-visibility hidden
	-webkit-perspective 1000
	perspective 1000

/*
* @name fixsel()
* @description Removes select tag's default style.
* @alias
* @author
* @ref
* @input fixsel()
* @type function
* @markup
select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  overflow: -moz-hidden-unscrollable;
  text-indent: .01px;
  text-overflow: '';
}
select::-ms-expand {
  display: none;
}
*/
fixsel()
	-webkit-appearance none
	-moz-appearance none
	appearance none
	overflow -moz-hidden-unscrollable
	text-indent .01px
	text-overflow ''
	&::-ms-expand
		display none

/*
* @name .hyphen
* @description Add a hyphen to broken words.
* @alias
* @author Kenneth Auchenberg
* @ref https://kenneth.io/blog/2012/03/04/word-wrapping-hypernation-using-css/
* @input $placeholder
* @type placeholder
* @markup
-webkit-hyphens: auto;
-moz-hyphens: auto;
-ms-hyphens: auto;
hyphens: auto;
*/
$hyphen
	-webkit-hyphens auto
	-moz-hyphens auto
	-ms-hyphens auto
	hyphens auto
