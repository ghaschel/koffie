//
// 888   _              88~\   88~\ ,e,
// 888 e~ ~   e88~-_  _888__ _888__  "   e88~~8e
// 888d8b    d888   i  888    888   888 d888  88b
// 888Y88b   8888   |  888    888   888 8888__888
// 888 Y88b  Y888   '  888    888   888 Y888    ,
// 888  Y88b  "88_-~   888    888   888  "88___/
//
// 		     - 1.1.4
//              - Guilherme Haschel

@import 'configs';

/*
* @name text-border
* @description Creates a four colored border in the desired element's text.
* @alias
* @author
* @ref
* @input &#64;include text-border(red, 1px, yellow, 1px, green, 1px, purple, 1px)
* @format scss
* @markup
text-shadow: 1px 1px #f00, -1px -1px #ff0, 1px -1px #008000, -1px 1px #800080;
*/
@mixin text-border($color1: #f00, $size1: 1px, $color2: #ff0, $size2: 1px, $color3: #008000, $size3: 1px, $color4: #800080, $size4: 1px) {
  @if (unitless($size1)) {
    $size1: #{$size1}px;
  }
  @if (unitless($size2)) {
    $size2: #{$size2}px;
  }
  @if (unitless($size3)) {
    $size3: #{$size3}px;
  }
  @if (unitless($size3)) {
    $size3: #{$size3}px;
  }
  $size1-1: $size1;
  $size2-1: unquote('-' + $size2);
  $size3-1: $size3;
  $size3-2: unquote('-' + $size3);
  $size4-1: unquote('-' + $size4);
  $size4-2: $size4;
  text-shadow: $size1-1 $size1-1 $color1, $size2-1 $size2-1 $color2, $size3-1 $size3-2 $color3, $size4-1 $size4-2 $color4;
}

/*
* @name error-input($color)
* @description Changes the placeholder, border and outline colors.
* @alias
* @author
* @ref
* @input &#64;include error-input(red)
* @format scss
* @markup
input {
  border: 1px solid red !important;
  color: red;
  outline-color: red;
}
input::-webkit-input-placeholder {
  color: red;
}
input::-moz-placeholder {
  color: red;
}
input:-moz-placeholder {
  color: red;
}
input:-ms-input-placeholder {
  color: red;
}
input::placeholder {
  color: red;
}
input:focus {
  outline-color: red;
}
*/
@mixin error-input($color: #e36d56) {
  border: 1px solid $color !important;
  color: $color;
  outline-color: $color;

  &::-webkit-input-placeholder {
    color: $color;
  }

  &::-moz-placeholder {
    color: $color;
  }

  &:-moz-placeholder {
    color: $color;
  }

  &:-ms-input-placeholder {
    color: $color;
  }

  &::placeholder {
    color: $color;
  }

  &:focus {
    outline-color: $color;
  }
}

/*
* @name placeholder($color)
* @description Changes the placeholder color.
* @alias
* @author
* @ref
* @input &#64;include placeholder(#eee)
* @format scss
* @markup
input::-webkit-input-placeholder {
  color: red;
}
input::-moz-placeholder {
  color: red;
}
input:-moz-placeholder {
  color: red;
}
input:-ms-input-placeholder {
  color: red;
}
input::placeholder {
  color: red;
}
input:focus {
  outline-color: red;
}
*/
@mixin placeholder($color: #eee) {
  &::-webkit-input-placeholder {
    color: $color;
  }

  &::-moz-placeholder {
    color: $color;
  }

  &:-moz-placeholder {
    color: $color;
  }

  &:-ms-input-placeholder {
    color: $color;
  }

  &::placeholder {
    color: $color;
  }
}

/*
* @name fix-input()
* @description Removes the placeholder while the input is focused and empty. Also removes the 'invalid' input state red box shadow from Firefox.
* @alias
* @author
* @ref
* @input &#64;include fix-input()
* @format scss
* @markup
input:focus::-webkit-input-placeholder {
  color: transparent;
}
input:invalid {
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
}
*/
@mixin fix-input {
  &:focus {
    &::-webkit-input-placeholder {
      color: transparent;
    }
  }

  &:invalid {
    -moz-box-shadow: none;
    -webkit-box-shadow: none;
    box-shadow: none;
  }
}

/*@name %antialiasing
* @description Enables font antialiasing.
* @alias %anti-aliasing, %font-smoothing
* @author Maximilian Hoffmann & drinchev
* @ref http://stackoverflow.com/questions/11459746/css3-webfont-smoothing-and-antialiasing-in-firefox-and-opera, http://drinchev.github.io/monosocialiconsfont/
* @input &#64;extend %antialiasing
* @format scss
* @markup
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: subpixel-antialiased;
  text-rendering: optimizeLegibility;
*/
%antialiasing,
%anti-aliasing,
%font-smoothing {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: subpixel-antialiased;
  text-rendering: optimizeLegibility;
}

/*
* @name scroll-bar($size, $background1, $background2, $radius)
* @description Changes the scrollbar's default style (Not for Firefox).
* @alias
* @author Drew Noakes
* @ref http://stackoverflow.com/questions/7725652/css-scrollbar-style-cross-browser
* @input &#64;include scroll-bar(6px, transparent, #ccc, 5px)
* @format scss
* @markup
html {
  scrollbar-3dlight-color: transparent;
  scrollbar-arrow-color: #666;
  scrollbar-face-color: #ccc;
  scrollbar-darkshadow-color: transparent;
  scrollbar-base-color: transparent;
  scrollbar-highlight-color: transparent;
  scrollbar-shadow-color: transparent;
  scrollbar-track-color: transparent;
}
html::-webkit-scrollbar {
  height: 6px;
  width: 6px;
}
html::-webkit-scrollbar-track {
  background: transparent;
}
html::-webkit-scrollbar-thumb {
  background: #ccc;;
  -webkit-border-radius: 5px;
  border-radius: 5px;
}
*/
@mixin scroll-bar($size: 6px, $background1: transparent, $background2: #ccc, $radius: 5px) {
  scrollbar-3dlight-color: $background1;
  scrollbar-arrow-color: darken($background2, 50%);
  scrollbar-base-color: $background1;
  scrollbar-darkshadow-color: $background1;
  scrollbar-face-color: $background2;
  scrollbar-highlight-color: $background1;
  scrollbar-shadow-color: $background1;
  scrollbar-track-color: $background1;

  &::-webkit-scrollbar {
    height: $size;
    width: $size;
  }

  &::-webkit-scrollbar-track {
    background: $background1;
  }

  &::-webkit-scrollbar-thumb {
    -webkit-border-radius: $radius;
    background: $background2;
    border-radius: $radius;
  }
}

/*
* @name disable-scroll-styling()
* @description Disable scrollbar styling by not vendor-prefixed properties.
* @alias
* @author W3C
* @ref https://www.w3.org/Style/Examples/007/scrollbars.en.html
* @input &#64;extend %disable-scroll-styling()
* @format scss
* @markup
scrollbar-3dlight-color: ThreeDLightShadow !important;
scrollbar-arrow-color: ButtonText !important;
scrollbar-darkshadow-color: ThreeDDarkShadow !important;
scrollbar-face-color: ThreeDFace !important;
scrollbar-highlight-color: ThreeDHighlight !important;
scrollbar-shadow-color: ThreeDDarkShadow !important;
scrollbar-track-color: Scrollbar !important;
*/
%disable-scroll-styling {
  scrollbar-3dlight-color: ThreeDLightShadow !important;
  scrollbar-arrow-color: ButtonText !important;
  scrollbar-darkshadow-color: ThreeDDarkShadow !important;
  scrollbar-face-color: ThreeDFace !important;
  scrollbar-highlight-color: ThreeDHighlight !important;
  scrollbar-shadow-color: ThreeDDarkShadow !important;
  scrollbar-track-color: Scrollbar !important;
}

/*
* @name border-radius($radius)
* @description Cross-browser border-radius.
* @alias bradius()
* @author
* @ref http://css3pie.com
* @input &#64;include border-radius(5px)
* @format scss
* @markup
-khtml-border-radius: 5px;
-moz-border-radius: 5px;
-ms-behaviour: url('https://cdn.rawgit.com/ghaschel/koffie/master/htc/PIE.htc');
-webkit-border-radius: 5px;
behavior: url('https://cdn.rawgit.com/ghaschel/koffie/master/htc/PIE.htc');
border-radius: 5px;
*/
@mixin border-radius($radius: 5px) {
  -khtml-border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  border-radius: $radius;
  @if $ie6 or $ie7 or $ie8 {
    -ms-behavior: url($abs-path+'PIE.htc');
    behavior: url($abs-path+'PIE.htc');
  }
}

/*
* @name padding-x($value)
* @description Wrapper function for easier use of padding-left and padding-right.
* @alias
* @author
* @ref
* @input &#64;include padding-x(3px)
* @format scss
* @markup
padding-left: 3px;
padding-right: 3px;
*/
@mixin padding-x($value: none) {
  padding-left: $value;
  padding-right: $value;
}

/*
* @name padding-y($value)
* @description Wrapper function for easier use of padding-top and padding-bottom.
* @alias
* @author
* @ref
* @input &#64;include padding-y(6px)
* @format scss
* @markup
padding-bottom: 6px;
padding-top: 6px;
*/
@mixin padding-y($value: none) {
  padding-bottom: $value;
  padding-top: $value;
}

/*
* @name margin-y($value)
* @description Wrapper function for easier use of margin-top and margin-bottom.
* @alias
* @author
* @ref
* @input &#64;include margin-y(9px)
* @format scss
* @markup
margin-bottom: 9px;
margin-top: 9px;
*/
@mixin margin-y($value: none) {
  margin-bottom: $value;
  margin-top: $value;
}

/*
* @name margin-x($value)
* @description Wrapper function for easier use of margin-left and margin-right.
* @alias
* @author
* @ref
* @input &#64;include margin-x(6px)
* @format scss
* @markup
margin-left: 6px;
margin-right: 6px;
*/
@mixin margin-x($value: none) {
  margin-left: $value;
  margin-right: $value;
}

/*
* @name opacity($opacity)
* @description Cross-browser opacity function.
* @alias
* @author
* @ref
* @input &#64;include opacity(0.35)
* @format scss
* @markup
-webkit-opacity: 0.35;
-khtml-opacity: 0.35;
-moz-opacity: 0.35;
opacity: 0.35;
-ms-filter: progrid:DXImageTransform.Microsoft.Alpha(opacity=35);
filter: alpha(opacity=35);
*/
@mixin opacity($opacity: 0.5) {
  -khtml-opacity: $opacity;
  -moz-opacity: $opacity;
  -webkit-opacity: $opacity;
  opacity: $opacity;
  @if $ie8 {
    -ms-filter: unquote('progid:DXImageTransform.Microsoft.Alpha(opacity=' + round($opacity * 100) + ')');
  }
  @if $ie5 or $ie6 or $ie7 {
    filter: unquote('alpha(opacity=' + round($opacity * 100) + ')');
  }
}

/*
* @name %nout
* @description Removes the outline when focus state is active.
* @alias
* @author
* @ref
* @input &#64;extend %nout
* @format scss
* @markup
a {
  outline: none;
}
a:focus {
  outline: none;
}
*/
%nout {
  outline: none;

  &:focus {
    outline: none;
  }
}

/*
* @name top-triangle($size, $color)
* @description Displays a triangle at the element's top.
* @alias
* @author
* @ref
* @input span:after { @include top-triangle(15px, $fff) }
* @format scss
* @markup
span:after {
  border-bottom: 15px solid #fff;
  border-left: 15px solid transparent;
  border-right: 15px solid transparent;
  border-top: 15px solid transparent;
  content: '';
  display: inline-block;
  height: 1px;
  position: absolute;
  top: 29px;
  width: 1px;
}
*/
@mixin top-triangle($size: 15px, $color: #fff) {
  border-bottom: $size solid $color;
  border-left: $size solid transparent;
  border-right: $size solid transparent;
  border-top: $size solid transparent;
  content: '';
  display: inline-block;
  height: 1px;
  position: absolute;
  top: round(($size * 2) - 1);
  width: 1px;
}

/*
* @name bottom-triangle($size, $color)
* @description Displays a triangle in the element's bottom.
* @alias
* @author
* @ref
* @input span:after { @include bottom-triangle(15px, $fff) }
* @format scss
* @markup
span:after {
  border-bottom: 15px solid transparent;
  border-left: 15px solid transparent;
  border-right: 15px solid transparent;
  border-top: 15px solid #fff;
  bottom: 29px;
  content: '';
  display: inline-block;
  height: 1px;
  position: absolute;
  width: 1px;
}
*/
@mixin bottom-triangle($size: 15px, $color: #fff) {
  border-bottom: $size solid transparent;
  border-left: $size solid transparent;
  border-right: $size solid transparent;
  border-top: $size solid $color;
  bottom: round(($size * 2) - 1);
  content: '';
  display: inline-block;
  height: 1px;
  position: absolute;
  width: 1px;
}

/*
* @name left-triangle($size, $color)
* @description Displays a triangle in the element's left.
* @alias
* @author
* @ref
* @input span:after { @include left-triangle(15px, $fff) }
* @format scss
* @markup
span:after {
  border-bottom: 15px solid transparent;
  border-left: 15px solid transparent;
  border-right: 15px solid #fff;
  border-top: 15px solid transparent
  content: '';
  display: inline-block;
  height: 1px;
  left: 29px;
  position: absolute;
  width: 1px;
}
*/
@mixin left-triangle($size: 15px, $color: #fff) {
  border-bottom: $size solid transparent;
  border-left: $size solid transparent;
  border-right: $size solid $color;
  border-top: $size solid transparent;
  content: '';
  display: inline-block;
  height: 1px;
  left: round(($size * 2) - 1);
  position: absolute;
  width: 1px;
}

/*
* @name right-triangle($size, $color)
* @description Displays a triangle in the element's right.
* @alias
* @author
* @ref
* @input span:after { @include right-triangle(15px, $fff) }
* @format scss
* @markup
span:after {
  border-bottom: 15px solid transparent;
  border-left: 15px solid #fff;
  border-right: 15px solid transparent;
  border-top: 15px solid transparent;
  content: '';
  display: inline-block;
  height: 1px;
  position: absolute;
  right: 29px;
  width: 1px;
}
*/
@mixin right-triangle($size: 15px, $color: #fff) {
  border-bottom: $size solid transparent;
  border-left: $size solid $color;
  border-right: $size solid transparent;
  border-top: $size solid transparent;
  content: '';
  display: inline-block;
  height: 1px;
  position: absolute;
  right: round(($size * 2) - 1);
  width: 1px;
}

/*
* @name %text-overflow
* @description Displays reticences at the line's end in case it doesn't fit.
* @alias %txt-ovf, %txtovf
* @author
* @ref
* @input &#64;extend %text-overflow
* @format scss
* @markup
overflow: hidden
white-space: nowrap
text-overflow: ellipsis
max-widt: 100%
display: inline-block
*/
%text-overflow,
%txt-ovf,
%txtovf {
  display: inline-block;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/*
* @name %no-user-select
* @description Disable user content selection.
* @alias %nousel
* @author
* @ref
* @input &#64;extend %no-user-select
* @format scss
* @markup
-khtml-user-select: none;
-moz-user-select: none;
-ms-user-select: none;
-o-user-select: none;
-webkit-user-select: none;
user-select: none;
*/
%no-user-select,
%nousel {
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}

/*
* @name user-select($color-1, $color-2)
* @description Changes the user content selection color.
* @alias usel()
* @author
* @ref
* @input &#64;include user-select(yellow, red)
* @format scss
* @markup
p::selection {
  background: yellow;
  color: red;
}
p::-moz-selection {
  background: red;
  color: yellow;
}
*/
@mixin user-select($color-1: #ff0, $color-2: #f00) {
  &::selection {
    background: $color-1;
    color: $color-2;
  }

  &::-moz-selection {
    background: $color-1;
    color: $color-2;
  }
}

/*
* @name %fix-flickering
* @description Fixes the flickering on pseudo elements when animated by transition.
* @alias %fixfl
* @author
* @ref
* @input &#64;extend %fix-flickering
* @format scss
* @markup
-ms-backface-visibility: hidden;
-webkit-backface-visibility: hidden;
backface-visibility: hidden;
*/
%fix-flickering,
%fixfl {
  -ms-backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}

/*
* @name transition($time, $ease, $where)
* @description Function for faster transition creation.
* @alias
* @author
* @ref
* @input &#64;include transition(0.3s, ease-in-out, all)
* @format scss
* @markup
-webkit-transition: 0.3s ease-in-out all;
-khtml-transition: 0.3s ease-in-out all;
-moz-transition: 0.3s ease-in-out all;
-ms-transition: 0.3s ease-in-out all;
-o-transition: 0.3s ease-in-out all;
transition: 0.3s ease-in-out all;
*/
@mixin transition($time: 0.3s, $ease: ease-in-out, $where: all) {
  -khtml-transition: $time $ease $where;
  -moz-transition: $time $ease $where;
  -ms-transition: $time $ease $where;
  -o-transition: $time $ease $where;
  -webkit-transition: $time $ease $where;
  transition: $time $ease $where;
}

/*
* @name %nospeak
* @description Hides an element from screen readers.
* @alias %no-speak
* @author
* @ref
* @input &#64;extend %nospeak
* @format scss
* @markup
speak: none;
*/
%nospeak,
%no-speak {
  speak: none;
}

/*
* @name %hw-accelerated
* @description Enables hardware acceleration. Use at the desided element's parent.
* @alias %hwacc
* @author
* @ref
* @input &#64;extend %hw-accelerated
* @format scss
* @markup
-webkit-backface-visibility: hidden;
-webkit-perspective: 1000;
-webkit-transform: rotateZ(360deg);
backface-visibility: hidden;
perspective: 1000;
*/
%hw-accelerated,
%hwacc {
  -webkit-backface-visibility: hidden;
  -webkit-perspective: 1000;
  -webkit-transform: rotateZ(360deg);
  backface-visibility: hidden;
  perspective: 1000;
}

/*
* @name fixsel()
* @description Removes select tag's default style.
* @alias
* @author
* @ref
* @input &#64;include fixsel()
* @format scss
* @markup
select {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  overflow: -moz-hidden-unscrollable;
  text-indent: .01px;
  text-overflow: '';
}
select::-ms-expand {
  display: none;
}
*/
@mixin fixsel {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  overflow: -moz-hidden-unscrollable;
  text-indent: 0.01px;
  text-overflow: '';

  &::-ms-expand {
    display: none;
  }
}

/*
* @name %hyphen
* @description Add a hyphen to broken words.
* @alias
* @author Kenneth Auchenberg
* @ref https://kenneth.io/blog/2012/03/04/word-wrapping-hypernation-using-css/
* @input &#64;extend %hyphen
* @format scss
* @markup
-webkit-hyphens: auto;
-moz-hyphens: auto;
-ms-hyphens: auto;
hyphens: auto;
*/
%hyphen {
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}
